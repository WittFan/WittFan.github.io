<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ExoBrain</title>
    <link>https://www.exobrain.online/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>人拥有此生此世是不够的，他还需要一个诗意的世界。</description>
    <pubDate>Fri, 09 Aug 2019 13:17:59 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>pandas read_table</title>
      <link>https://www.exobrain.online/2019/08/09/pandas-read-table/</link>
      <guid>https://www.exobrain.online/2019/08/09/pandas-read-table/</guid>
      <pubDate>Fri, 09 Aug 2019 13:17:43 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u012131430/article/details/78299582&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/u012131430/artic
        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="https://blog.csdn.net/u012131430/article/details/78299582" target="_blank" rel="noopener">https://blog.csdn.net/u012131430/article/details/78299582</a></p>]]></content:encoded>
      
      <comments>https://www.exobrain.online/2019/08/09/pandas-read-table/#disqus_thread</comments>
    </item>
    
    <item>
      <title>商品期货协整配对</title>
      <link>https://www.exobrain.online/2019/08/09/%E5%95%86%E5%93%81%E6%9C%9F%E8%B4%A7%E5%8D%8F%E6%95%B4%E9%85%8D%E5%AF%B9/</link>
      <guid>https://www.exobrain.online/2019/08/09/%E5%95%86%E5%93%81%E6%9C%9F%E8%B4%A7%E5%8D%8F%E6%95%B4%E9%85%8D%E5%AF%B9/</guid>
      <pubDate>Fri, 09 Aug 2019 05:59:16 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;https://uqer.io/v3/community/share/57b52ac0228e5b79aa759416&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://uqer.io/v3/community/share/5
        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="https://uqer.io/v3/community/share/57b52ac0228e5b79aa759416" target="_blank" rel="noopener">https://uqer.io/v3/community/share/57b52ac0228e5b79aa759416</a></p>]]></content:encoded>
      
      <comments>https://www.exobrain.online/2019/08/09/%E5%95%86%E5%93%81%E6%9C%9F%E8%B4%A7%E5%8D%8F%E6%95%B4%E9%85%8D%E5%AF%B9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>平稳性检验</title>
      <link>https://www.exobrain.online/2019/08/09/%E5%B9%B3%E7%A8%B3%E6%80%A7%E6%A3%80%E9%AA%8C/</link>
      <guid>https://www.exobrain.online/2019/08/09/%E5%B9%B3%E7%A8%B3%E6%80%A7%E6%A3%80%E9%AA%8C/</guid>
      <pubDate>Fri, 09 Aug 2019 05:26:00 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>https://www.exobrain.online/2019/08/09/%E5%B9%B3%E7%A8%B3%E6%80%A7%E6%A3%80%E9%AA%8C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>python模块: deque</title>
      <link>https://www.exobrain.online/2019/08/09/python%E6%A8%A1%E5%9D%97-deque/</link>
      <guid>https://www.exobrain.online/2019/08/09/python%E6%A8%A1%E5%9D%97-deque/</guid>
      <pubDate>Fri, 09 Aug 2019 01:34:57 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>https://www.exobrain.online/2019/08/09/python%E6%A8%A1%E5%9D%97-deque/#disqus_thread</comments>
    </item>
    
    <item>
      <title>为markdown创建一个新标记符</title>
      <link>https://www.exobrain.online/2019/08/04/%E4%B8%BAmarkdown%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%BC%95%E6%96%87%E6%A0%87%E8%AE%B0%E7%AC%A6/</link>
      <guid>https://www.exobrain.online/2019/08/04/%E4%B8%BAmarkdown%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%BC%95%E6%96%87%E6%A0%87%E8%AE%B0%E7%AC%A6/</guid>
      <pubDate>Sun, 04 Aug 2019 09:18:42 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;问题的由来&quot;&gt;&lt;a href=&quot;#问题的由来&quot; class=&quot;headerlink&quot; title=&quot;问题的由来&quot;&gt;&lt;/a&gt;问题的由来&lt;/h2&gt;&lt;p&gt;当我们在编写markdown文件的时候会经常从网页上ctr+c其他人的文字，而我们标注作者和文章的来源不是特别方便，
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="问题的由来"><a href="#问题的由来" class="headerlink" title="问题的由来"></a>问题的由来</h2><p>当我们在编写markdown文件的时候会经常从网页上ctr+c其他人的文字，而我们标注作者和文章的来源不是特别方便，这会导致许多时候我们不去标注作者和文章的来源。引文规范对于问题追溯和文明发展相当重要，与其道德说教来让大家遵守引文规范，不如提供更方便的方式来让大家遵守，因此，本文抛砖引玉出一种新的高效的规范和工具。</p><h2 id="复制时天生携带引文信息"><a href="#复制时天生携带引文信息" class="headerlink" title="复制时天生携带引文信息"></a>复制时天生携带引文信息</h2><p>将下面的javascript语句放到网页的head处</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"copy"</span>, copy);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">oEvent</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> selection = <span class="built_in">window</span>.getSelection();</span><br><span class="line">        <span class="keyword">var</span> quoteMagic = <span class="string">"&lt;!-- It's convenient in markdown file. --&gt;\n"</span>;</span><br><span class="line">        quoteMagic += <span class="string">"&lt;!-- More information: https://www.exobrain.online/2019/08/04/%E4%B8%BAmarkdown%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%BC%95%E6%96%87%E6%A0%87%E8%AE%B0%E7%AC%A6/#more --&gt;\n"</span>;</span><br><span class="line">        quoteMagic += <span class="string">"&lt;!-- quote(start)&#123; author: authorname, site: www.sitename.com, location: "</span>;</span><br><span class="line">        quoteMagic += <span class="built_in">document</span>.location.href;</span><br><span class="line">        quoteMagic += <span class="string">"&#125; --&gt;\n"</span>;</span><br><span class="line">        <span class="keyword">var</span> copytext = quoteMagic + selection + <span class="string">"\n&lt;!-- quote(end) --&gt;"</span>;</span><br><span class="line">        oEvent.preventDefault();</span><br><span class="line">        oEvent.clipboardData.setData(<span class="string">"text"</span>, copytext);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>示例如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.addEventListener(<span class="string">"copy"</span>, copy);</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">oEvent</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> selection = <span class="built_in">window</span>.getSelection();</span></span><br><span class="line"><span class="xml">        var quoteMagic = "<span class="comment">&lt;!-- It's convenient in markdown file. --&gt;</span>\n";</span></span><br><span class="line"><span class="xml">        quoteMagic += "<span class="comment">&lt;!-- More information: https://www.exobrain.online/2019/08/04/%E4%B8%BAmarkdown%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%BC%95%E6%96%87%E6%A0%87%E8%AE%B0%E7%AC%A6/#more --&gt;</span>\n";</span></span><br><span class="line"><span class="javascript">        quoteMagic += <span class="string">"&lt;!-- quote(start)&#123; author: authorname, site: www.sitename.com, location: "</span>;</span></span><br><span class="line"><span class="javascript">        quoteMagic += <span class="built_in">document</span>.location.href;</span></span><br><span class="line"><span class="javascript">        quoteMagic += <span class="string">"&#125; --&gt;\n"</span>;</span></span><br><span class="line"><span class="xml">        var copytext = quoteMagic + selection + "\n<span class="comment">&lt;!-- quote(end) --&gt;</span>";</span></span><br><span class="line">        oEvent.preventDefault();</span><br><span class="line"><span class="javascript">        oEvent.clipboardData.setData(<span class="string">"text"</span>, copytext);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">测试1<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">测试2</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当我们运行网页，复制网页中内容后，将其粘贴到mardown文件，会得到下面的结果</p><p><img src="/2019/08/04/为markdown创建一个引文标记符/1.png" alt="1"><br>而其（在vscode+MarkDownPreview中）渲染成html的显示效果如下图<br><img src="/2019/08/04/为markdown创建一个引文标记符/2.png" alt="1"><br>这样我们就可以在不影响显示的情况下保留其引文信息。当然，html中保留引文信息的工作需要在markdown文件转换为html文件的过程中完成，转换工具和规范这里不做讨论，先留下个坑，或者其他人来完成吧，😃。</p><h2 id="hexo的next主题下复制时附加引文信息"><a href="#hexo的next主题下复制时附加引文信息" class="headerlink" title="hexo的next主题下复制时附加引文信息"></a>hexo的next主题下复制时附加引文信息</h2><p>找到hexo项目根目录，我的根目录是/blog<br>在 ../blog/themes/next/layout/_partials/head目录下找到custom-head.swig文件，将下面的代码添加到文末就可以了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"copy"</span>, copy);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">oEvent</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> selection = <span class="built_in">window</span>.getSelection();</span><br><span class="line">        <span class="keyword">var</span> quoteMagic = <span class="string">"&lt;!-- It's convenient in markdown file. --&gt;\n"</span>;</span><br><span class="line">        quoteMagic += <span class="string">"&lt;!-- More information: https://www.exobrain.online/2019/08/04/%E4%B8%BAmarkdown%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%BC%95%E6%96%87%E6%A0%87%E8%AE%B0%E7%AC%A6/#more --&gt;\n"</span>;</span><br><span class="line">        quoteMagic += <span class="string">"&lt;!-- quote(start)&#123; author: authorname, site: www.sitename.com, location: "</span>;</span><br><span class="line">        quoteMagic += <span class="built_in">document</span>.location.href;</span><br><span class="line">        quoteMagic += <span class="string">"&#125; --&gt;\n"</span>;</span><br><span class="line">        <span class="keyword">var</span> copytext = quoteMagic + selection + <span class="string">"\n&lt;!-- quote(end) --&gt;"</span>;</span><br><span class="line">        oEvent.preventDefault();</span><br><span class="line">        oEvent.clipboardData.setData(<span class="string">"text"</span>, copytext);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="将hexo-next下的文末出处去掉"><a href="#将hexo-next下的文末出处去掉" class="headerlink" title="将hexo-next下的文末出处去掉"></a>将hexo-next下的文末出处去掉</h2><p>将文件../blog/themes/next/_config.yml（blog为我的hexo根目录）中的post_copyright项下的enable的值从true改为false</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Declare license on posts</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">3.0</span></span><br><span class="line"><span class="attr">  license_url:</span> <span class="attr">https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure><p>改完后为</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Declare license on posts</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">3.0</span></span><br><span class="line"><span class="attr">  license_url:</span> <span class="attr">https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure><p>之后文章末尾就不会再出现下图的情形了<br><img src="/2019/08/04/为markdown创建一个引文标记符/3.png" alt="1"></p><h2 id="如果使用了代码复制功能怎么改"><a href="#如果使用了代码复制功能怎么改" class="headerlink" title="如果使用了代码复制功能怎么改"></a>如果使用了代码复制功能怎么改</h2><p>当使用代码复制功能的时候，我们希望复制到干净的代码，却不想得到引用信息;而在复制文章内容的时候，我们希望得到引文信息。</p><p>笔者使用的是这个链接下实现的代码复制功能，<br><a href="https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/" target="_blank" rel="noopener">https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/</a></p><p>我的办法是：<br>将clipboard-use.js文件的代码进行了一下升级，加了if语句。<br>可以理解成将custom-head.swig文件里的那个添加引用的代码整合到了clipboard-use.js文件里。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*页面载入完成后，创建复制按钮*/</span></span><br><span class="line"><span class="keyword">var</span> btnCopyEmpty = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"copy"</span>, copy);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">oEvent</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> selection = <span class="built_in">window</span>.getSelection();</span><br><span class="line">    <span class="keyword">if</span>(btnCopyEmpty)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(btnCopyEmpty)</span><br><span class="line">        <span class="keyword">var</span> quoteMagic = <span class="string">"&lt;!-- It's convenient in markdown file. --&gt;\n"</span>;</span><br><span class="line">        quoteMagic += <span class="string">"&lt;!-- More information: https://www.exobrain.online/2019/08/04/%E4%B8%BAmarkdown%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%BC%95%E6%96%87%E6%A0%87%E8%AE%B0%E7%AC%A6/#more --&gt;\n"</span>;</span><br><span class="line">        quoteMagic += <span class="string">"&lt;!-- quote(start)&#123; author: authorname, site: www.sitename.com, location: "</span>;</span><br><span class="line">        quoteMagic += <span class="built_in">document</span>.location.href;</span><br><span class="line">        quoteMagic += <span class="string">"&#125; --&gt;\n"</span>;</span><br><span class="line">        <span class="keyword">var</span> copytext = quoteMagic + selection + <span class="string">"\n&lt;!-- quote(end) --&gt;"</span>;    </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> copytext = selection;   </span><br><span class="line">    &#125;</span><br><span class="line">    oEvent.preventDefault();</span><br><span class="line">    oEvent.clipboardData.setData(<span class="string">"text"</span>, copytext);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123; </span><br><span class="line"><span class="comment">/* code */</span></span><br><span class="line"><span class="keyword">var</span> initCopyCode = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> copyHtml = <span class="string">''</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;button class="btn-copy" data-clipboard-snippet=""&gt;'</span>;</span><br><span class="line">    <span class="comment">//fa fa-globe可以去字体库替换自己想要的图标</span></span><br><span class="line">copyHtml += <span class="string">'  &lt;i class="fa fa-clipboard"&gt;&lt;/i&gt;&lt;span&gt;copy&lt;/span&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;/button&gt;'</span>;</span><br><span class="line">    $(<span class="string">".highlight .code pre"</span>).before(copyHtml);</span><br><span class="line">    <span class="keyword">new</span> ClipboardJS(<span class="string">'.btn-copy'</span>, &#123;</span><br><span class="line">        target: <span class="function"><span class="keyword">function</span>(<span class="params">trigger</span>) </span>&#123;</span><br><span class="line">            btnCopyEmpty = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span> trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// clipboard.on('success', function(e)&#123;</span></span><br><span class="line">    <span class="comment">//     btnCopyEmpty = false;</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line">&#125;</span><br><span class="line">initCopyCode();</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://www.exobrain.online/2019/08/04/%E4%B8%BAmarkdown%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%BC%95%E6%96%87%E6%A0%87%E8%AE%B0%E7%AC%A6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>test password</title>
      <link>https://www.exobrain.online/2019/08/04/test-password/</link>
      <guid>https://www.exobrain.online/2019/08/04/test-password/</guid>
      <pubDate>Sun, 04 Aug 2019 04:05:36 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>https://www.exobrain.online/2019/08/04/test-password/#disqus_thread</comments>
    </item>
    
    <item>
      <title>python内置函数getitem系列</title>
      <link>https://www.exobrain.online/2016/08/12/python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0getitem%E7%B3%BB%E5%88%97/</link>
      <guid>https://www.exobrain.online/2016/08/12/python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0getitem%E7%B3%BB%E5%88%97/</guid>
      <pubDate>Fri, 12 Aug 2016 06:45:04 GMT</pubDate>
      <description>
      
        
        
          &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
        
      
      </description>
      
      <content:encoded><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DictDemo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,key,value)</span>:</span></span><br><span class="line">        self.dict = &#123;&#125;</span><br><span class="line">        self.dict[key] = value</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span><span class="params">(self,key)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.dict[key]</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setitem__</span><span class="params">(self,key,value)</span>:</span></span><br><span class="line">        self.dict[key] = value</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> len(self.dict)</span><br><span class="line">dictDemo = DictDemo(<span class="string">'key0'</span>,<span class="string">'value0'</span>)</span><br><span class="line">print(dictDemo[<span class="string">'key0'</span>]) <span class="comment">#value0</span></span><br><span class="line">dictDemo[<span class="string">'key1'</span>] = <span class="string">'value1'</span></span><br><span class="line">print(dictDemo[<span class="string">'key1'</span>]) <span class="comment">#value1</span></span><br><span class="line">print(len(dictDemo)) <span class="comment">#2</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://www.exobrain.online/2016/08/12/python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0getitem%E7%B3%BB%E5%88%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>from eval to getattr hasattr setattr</title>
      <link>https://www.exobrain.online/2016/08/12/from%20eval%20to%20getattr%20hasattr%20setattr/</link>
      <guid>https://www.exobrain.online/2016/08/12/from%20eval%20to%20getattr%20hasattr%20setattr/</guid>
      <pubDate>Fri, 12 Aug 2016 05:26:04 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;现实中的问题：我手中有一个列表[（’请求网页’,’网页1’）,（’解析网页’,’网页1’, (‘保存网页’, ‘网页1’),’请求网页’,’网页2’）,（’解析网页’,’网页2’, (‘保存网页’, ‘网页2’),… ]，想将列表中的事情从头到尾都干一遍。&lt;/p&gt;
&lt;ol&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>现实中的问题：我手中有一个列表[（’请求网页’,’网页1’）,（’解析网页’,’网页1’, (‘保存网页’, ‘网页1’),’请求网页’,’网页2’）,（’解析网页’,’网页2’, (‘保存网页’, ‘网页2’),… ]，想将列表中的事情从头到尾都干一遍。</p><ol><li><p>首先，定义一个类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spider</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">request</span><span class="params">(self, page)</span>:</span></span><br><span class="line">        print(<span class="string">'请求网页:'</span>, page)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, page)</span>:</span></span><br><span class="line">        print(<span class="string">'解析网页:'</span>, page)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self, page)</span>:</span></span><br><span class="line">        print(<span class="string">'保存网页:'</span>, page)</span><br></pre></td></tr></table></figure></li><li><p>然后我们想的是，如何复用Spider里的方法<br>许多人的做法是直接使用eval<br>做法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">todo_lst = [(<span class="string">'request'</span>, <span class="string">'www.exobrain.online'</span>), (<span class="string">'parse'</span>, <span class="string">'www.exobrain.online'</span>), (<span class="string">'save'</span>, <span class="string">'www.exobrain.online'</span>),(<span class="string">'request'</span>, <span class="string">'www.exobrain.online/categories/'</span>), (<span class="string">'parse'</span>, <span class="string">'www.exobrain.online/categories/'</span>), (<span class="string">'save'</span>, <span class="string">'www.exobrain.online/categories/'</span>), (<span class="string">'方法测试1'</span>,<span class="string">'www.exobrain.online/categories/'</span>)]</span><br><span class="line">spider = Spider()</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> todo_lst:</span><br><span class="line">    string = <span class="string">'spider.'</span> + item[<span class="number">0</span>]+<span class="string">'("'</span>+item[<span class="number">1</span>]+<span class="string">'")'</span></span><br><span class="line">    eval(string)</span><br></pre></td></tr></table></figure></li></ol><p>出来了结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">请求网页: www.exobrain.online</span><br><span class="line">解析网页: www.exobrain.online</span><br><span class="line">保存网页: www.exobrain.online</span><br><span class="line">请求网页: www.exobrain.online/categories/</span><br><span class="line">解析网页: www.exobrain.online/categories/</span><br><span class="line">保存网页: www.exobrain.online/categories/</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">AttributeError: &apos;Spider&apos; object has no attribute &apos;错误的方法测试1&apos;(报错：部分)</span><br></pre></td></tr></table></figure><p>我们看到了报错，自然可以用try except处理。<br>but，eval is evil, it’s not suggested. If you use eval, python is no longer elegant.<br>So, we introduce the inbuit methods “<strong>getattr</strong>, <strong>hasattr</strong>, <strong>setattr</strong>“<br>（参考自<a href="https://stackoverflow.com/questions/3061/calling-a-function-of-a-module-by-using-its-name-a-string" target="_blank" rel="noopener">https://stackoverflow.com/questions/3061/calling-a-function-of-a-module-by-using-its-name-a-string</a><br>不得不感慨国内外的差距，人家11years前解决的问题，我们到现在还有好多程序员处于问题之中，还在大量使用eval()。）</p><p>使用getattr代替eval, 将for部分注释掉重写如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">todo_lst = [(<span class="string">'request'</span>, <span class="string">'www.exobrain.online'</span>), (<span class="string">'parse'</span>, <span class="string">'www.exobrain.online'</span>), (<span class="string">'save'</span>, <span class="string">'www.exobrain.online'</span>),(<span class="string">'request'</span>, <span class="string">'www.exobrain.online/categories/'</span>), (<span class="string">'parse'</span>, <span class="string">'www.exobrain.online/categories/'</span>), (<span class="string">'save'</span>, <span class="string">'www.exobrain.online/categories/'</span>), (<span class="string">'方法测试1'</span>,<span class="string">'www.exobrain.online/categories/'</span>)]</span><br><span class="line">spider = Spider()</span><br><span class="line"><span class="comment"># for item in todo_lst:</span></span><br><span class="line"><span class="comment">#     string = 'spider.' + item[0]+'("'+item[1]+'")'</span></span><br><span class="line"><span class="comment">#     eval(string)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> todo_lst:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> hasattr(spider, item[<span class="number">0</span>]):</span><br><span class="line">        print(<span class="string">'Spider类里不存在方法:'</span>, item[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    getattr(spider, item[<span class="number">0</span>])(item[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>我们看到了漂亮的结果，有没有发现上面的hasattr+getattr的代码比eval的代码更加优雅。<br>I choose getattr instead of eval just because of elegance. 😃</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">请求网页: www.exobrain.online</span><br><span class="line">解析网页: www.exobrain.online</span><br><span class="line">保存网页: www.exobrain.online</span><br><span class="line">请求网页: www.exobrain.online/categories/</span><br><span class="line">解析网页: www.exobrain.online/categories/</span><br><span class="line">保存网页: www.exobrain.online/categories/</span><br><span class="line">Spider类里不存在方法: 方法测试1</span><br></pre></td></tr></table></figure><ol start="3"><li><p>动态将函数添加到类或者对象里面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">method_added</span><span class="params">(page)</span>:</span></span><br><span class="line">    print(<span class="string">'调用method_added函数'</span>,page)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将method_added 注册到spider对象里</span></span><br><span class="line">setattr(spider, <span class="string">'method_added'</span>, method_added)</span><br><span class="line"><span class="comment"># 测试method_added是否添加到spider对象里</span></span><br><span class="line">print(hasattr(spider, <span class="string">'method_added'</span>))</span><br><span class="line"><span class="comment"># &gt;True 返回值为True, 添加成功</span></span><br><span class="line">getattr(spider, <span class="string">'method_added'</span>)(<span class="string">'www.exobrain.online'</span>)</span><br><span class="line"><span class="comment"># &gt; 调用method_added函数 www.exobrain.online</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">method_added2</span><span class="params">(self, page)</span>:</span></span><br><span class="line">    print(<span class="string">'调用method_added2函数'</span>,page)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将method_added2 注册到Spider类里</span></span><br><span class="line">setattr(Spider, <span class="string">'method_added2'</span>, method_added2)</span><br><span class="line"><span class="comment"># 测试method_added是否添加到spider对象里</span></span><br><span class="line">print(hasattr(spider, <span class="string">'method_added2'</span>))</span><br><span class="line"><span class="comment"># &gt;True 返回值为True, 添加成功</span></span><br><span class="line">getattr(spider, <span class="string">'method_added2'</span>)(<span class="string">'www.exobrain.online'</span>)</span><br><span class="line"><span class="comment"># &gt; 调用method_added函数 www.exobrain.online</span></span><br></pre></td></tr></table></figure></li><li><p>对于函数调用怎么办？<br>我们可以使用locals 和 globals。locals() 和 globals() 是python的两个内置函数，通过它们可以一字典的方式访问局部和全局变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"foo"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"bar"</span></span><br><span class="line"></span><br><span class="line">func_list = [<span class="string">"foo"</span>,<span class="string">"bar"</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> func <span class="keyword">in</span> func_list:</span><br><span class="line">    locals()[func]()</span><br><span class="line"><span class="comment"># &gt;foo</span></span><br><span class="line"><span class="comment"># &gt;bar</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> func <span class="keyword">in</span> func_list:</span><br><span class="line">    globals()[func]()</span><br><span class="line"><span class="comment"># &gt;foo</span></span><br><span class="line"><span class="comment"># &gt;bar</span></span><br></pre></td></tr></table></figure></li></ol><p>参考：<br><a href="https://segmentfault.com/a/1190000010476065" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010476065</a><br><a href="https://stackoverflow.com/questions/3061/calling-a-function-of-a-module-by-using-its-name-a-string" target="_blank" rel="noopener">https://stackoverflow.com/questions/3061/calling-a-function-of-a-module-by-using-its-name-a-string</a></p>]]></content:encoded>
      
      <comments>https://www.exobrain.online/2016/08/12/from%20eval%20to%20getattr%20hasattr%20setattr/#disqus_thread</comments>
    </item>
    
    <item>
      <title>foo and bar 是个啥？</title>
      <link>https://www.exobrain.online/2016/08/12/foo-and-bar-%E6%98%AF%E4%B8%AA%E5%95%A5%EF%BC%9F/</link>
      <guid>https://www.exobrain.online/2016/08/12/foo-and-bar-%E6%98%AF%E4%B8%AA%E5%95%A5%EF%BC%9F/</guid>
      <pubDate>Fri, 12 Aug 2016 05:19:06 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;foo &amp;lt;– fu &amp;lt;– fuck up 一团糟&lt;br&gt;bar &amp;lt;– beyond all recognition&lt;br&gt;![foo_and_bar.jpg]foo_and_bar.jpg&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p>foo &lt;– fu &lt;– fuck up 一团糟<br>bar &lt;– beyond all recognition<br>![foo_and_bar.jpg]foo_and_bar.jpg</p>]]></content:encoded>
      
      <comments>https://www.exobrain.online/2016/08/12/foo-and-bar-%E6%98%AF%E4%B8%AA%E5%95%A5%EF%BC%9F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>matplotlib.pyplot.gca:polar</title>
      <link>https://www.exobrain.online/2016/08/11/matplotlib-pyplot-gca-polar/</link>
      <guid>https://www.exobrain.online/2016/08/11/matplotlib-pyplot-gca-polar/</guid>
      <pubDate>Thu, 11 Aug 2016 11:55:17 GMT</pubDate>
      <description>
      
        
        
          &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
        
      
      </description>
      
      <content:encoded><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">    demo09_3d_polar.py 3d 极坐标系</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> axes3d</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 整理数据</span></span><br><span class="line">t = np.linspace(<span class="number">0</span>, <span class="number">4</span>*np.pi, <span class="number">1000</span>)</span><br><span class="line">r = <span class="number">0.8</span> * t</span><br><span class="line"><span class="comment"># 绘制</span></span><br><span class="line">plt.figure(<span class="string">'3D Polar'</span>, facecolor=<span class="string">'lightgray'</span>)</span><br><span class="line">plt.title(<span class="string">'3D Polar'</span>, fontsize=<span class="number">18</span>)</span><br><span class="line">ax3d = plt.gca(projection=<span class="string">'polar'</span>)</span><br><span class="line">ax3d.set_xlabel(<span class="string">r'$\theta$'</span>, fontsize=<span class="number">14</span>)</span><br><span class="line">ax3d.set_ylabel(<span class="string">r'$\rho$'</span>, fontsize=<span class="number">14</span>)</span><br><span class="line">plt.tick_params(labelsize=<span class="number">10</span>)</span><br><span class="line">plt.grid(linestyle=<span class="string">':'</span>)</span><br><span class="line">plt.plot(t, r)</span><br><span class="line">plt.savefig(<span class="string">'3d_polar.png'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/2016/08/11/matplotlib-pyplot-gca-polar/3d_polar.png" alt="3d_polar.png"></p>]]></content:encoded>
      
      <comments>https://www.exobrain.online/2016/08/11/matplotlib-pyplot-gca-polar/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
